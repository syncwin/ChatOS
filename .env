# ChatOS Environment Variables Template
# Copy this file to .env.local for local development

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================

# Supabase Project URL
# Currently hardcoded in src/integrations/supabase/client.ts
# VITE_SUPABASE_URL=https://ejjmwhkjnkxtmzvpqnig.supabase.co

# Supabase Anonymous Key (Public)
# Currently hardcoded in src/integrations/supabase/client.ts
# VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVqam13aGtqbmt4dG16dnBxbmlnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk5ODUyNDYsImV4cCI6MjA2NTU2MTI0Nn0.EiOR2sXfGi_YnUcm_hEsyG0yRF6vqhWGH3KFrV0stl8

# Supabase Service Role Key (Private - for Edge Functions)
# Used in supabase/functions/ai-chat/auth/apiKeyHandler.ts
# SUPABASE_SERVICE_ROLE_KEY=your_service_role_key_here

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development server port (default: 8080)
# VITE_PORT=8080

# Development server host (default: localhost)
# VITE_HOST=localhost

# Enable development features
# VITE_DEV_MODE=true

# =============================================================================
# AI PROVIDER API KEYS (FOR TESTING)
# =============================================================================
# Note: These are for development testing only.
# In production, users provide their own API keys through the UI.

# OpenAI API Key
# Get from: https://platform.openai.com/api-keys
# OPENAI_API_KEY=sk-...

# Anthropic API Key
# Get from: https://console.anthropic.com/
# ANTHROPIC_API_KEY=sk-ant-...

# Google Gemini API Key
# Get from: https://makersuite.google.com/app/apikey
# GOOGLE_API_KEY=AIza...

# Mistral API Key
# Get from: https://console.mistral.ai/
# MISTRAL_API_KEY=...

# OpenRouter API Key
# Get from: https://openrouter.ai/keys
# OPENROUTER_API_KEY=sk-or-...

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret for session encryption (if implementing custom auth)
# JWT_SECRET=your_jwt_secret_here

# API Key encryption salt (for guest mode)
# VITE_ENCRYPTION_SALT=your_encryption_salt_here

# =============================================================================
# ANALYTICS & MONITORING (OPTIONAL)
# =============================================================================

# Google Analytics ID
# VITE_GA_ID=G-XXXXXXXXXX

# Sentry DSN for error tracking
# VITE_SENTRY_DSN=https://...

# PostHog API Key for analytics
# VITE_POSTHOG_KEY=phc_...

# =============================================================================
# FEATURE FLAGS (OPTIONAL)
# =============================================================================

# Enable experimental features
# VITE_ENABLE_EXPERIMENTAL=false

# Enable guest mode
# VITE_ENABLE_GUEST_MODE=true

# Enable streaming responses
# VITE_ENABLE_STREAMING=true

# Maximum message length
# VITE_MAX_MESSAGE_LENGTH=10000

# Maximum chat history length
# VITE_MAX_CHAT_HISTORY=100

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Base URL for production deployment
# VITE_BASE_URL=https://your-domain.com

# CDN URL for static assets
# VITE_CDN_URL=https://cdn.your-domain.com

# =============================================================================
# NOTES
# =============================================================================

# 1. Variables prefixed with VITE_ are exposed to the client-side code
# 2. Variables without VITE_ prefix are server-side only (Edge Functions)
# 3. Never commit real API keys to version control
# 4. Use different keys for development and production
# 5. Rotate API keys regularly for security

# =============================================================================
# CURRENT IMPLEMENTATION STATUS
# =============================================================================

# ✅ Supabase configuration: Hardcoded in source files
# ✅ Guest mode: Fully implemented with sessionStorage
# ✅ API key management: UI-based for both guest and auth users
# ✅ Multi-provider support: OpenAI, Anthropic, Gemini, Mistral, OpenRouter
# ✅ Edge functions: Deployed and working
# ⚠️  Environment variables: Not currently used (hardcoded values)
# ⚠️  Security: Basic encryption for guest keys, full encryption for auth users

# =============================================================================
# MIGRATION TO ENVIRONMENT VARIABLES
# =============================================================================

# To migrate from hardcoded values to environment variables:
# 1. Update src/integrations/supabase/client.ts to use VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY
# 2. Update src/services/aiProviderService.ts to use environment variables
# 3. Update supabase/functions/ai-chat/auth/apiKeyHandler.ts to use SUPABASE_SERVICE_ROLE_KEY
# 4. Add environment variable validation in main.tsx or App.tsx
# 5. Update deployment scripts to set production environment variables